{"version":3,"file":"static/js/200.803b1549.chunk.js","mappings":"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","sources":["components/VisitorNotification.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport emailjs from '@emailjs/browser';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  IconButton,\r\n  Tooltip,\r\n  Zoom,\r\n  Snackbar,\r\n  Alert,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport WavingHandIcon from '@mui/icons-material/WavingHand';\r\nimport { keyframes } from '@mui/system';\r\n\r\n// Replace these with your actual EmailJS credentials from your EmailJS dashboard\r\nconst EMAILJS_SERVICE_ID = 'service_oy26n57';  // Service ID from EmailJS\r\nconst EMAILJS_TEMPLATE_ID = 'template_7dr1jue'; // Template ID from EmailJS\r\nconst EMAILJS_PUBLIC_KEY = 'P2dCTW3FDScUnjx15';     // Public Key from EmailJS\r\n\r\n// Initialize EmailJS with your public key\r\nemailjs.init(EMAILJS_PUBLIC_KEY);\r\n\r\nconst float = keyframes`\r\n  0% { transform: translateY(0px); }\r\n  50% { transform: translateY(-10px); }\r\n  100% { transform: translateY(0px); }\r\n`;\r\n\r\nconst VisitorNotification = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await emailjs.send(\r\n        EMAILJS_SERVICE_ID,\r\n        EMAILJS_TEMPLATE_ID,\r\n        {\r\n          from_name: name,\r\n          message: message || \"No message provided\",\r\n          visit_time: new Date().toLocaleString('en-US', {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n          }),\r\n          reply_to: 'noreply@portfolio.com', // Add this line\r\n          to_name: 'Shikhar', // Add this line\r\n        },\r\n        EMAILJS_PUBLIC_KEY // Add public key here too\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Thanks for letting me know! I appreciate your visit! ðŸ˜Š',\r\n          severity: 'success'\r\n        });\r\n        setOpen(false);\r\n        setName('');\r\n        setMessage('');\r\n      }\r\n    } catch (error) {\r\n      console.error('EmailJS Error:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Oops! Something went wrong. Please try again.',\r\n        severity: 'error'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip \r\n        title=\"Say Hi! ðŸ‘‹\" \r\n        placement=\"left\"\r\n        TransitionComponent={Zoom}\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: 30,\r\n            right: 30,\r\n            zIndex: 1000,\r\n            animation: `${float} 3s ease-in-out infinite`,\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={() => setOpen(true)}\r\n            startIcon={<WavingHandIcon />}\r\n            sx={{\r\n              background: 'linear-gradient(45deg, #6C63FF 30%, #FF4081 90%)',\r\n              color: 'white',\r\n              boxShadow: '0 3px 15px rgba(108, 99, 255, 0.3)',\r\n              px: 3,\r\n              py: 1.5,\r\n              borderRadius: 30,\r\n              textTransform: 'none',\r\n              fontSize: { xs: '0.875rem', sm: '1rem' },\r\n              fontWeight: 500,\r\n              '&:hover': {\r\n                background: 'linear-gradient(45deg, #5B52FF 30%, #FF2D71 90%)',\r\n                transform: 'scale(1.05)',\r\n                boxShadow: '0 5px 20px rgba(108, 99, 255, 0.4)',\r\n              },\r\n              transition: 'all 0.3s ease',\r\n              backdropFilter: 'blur(8px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.1)',\r\n              display: { xs: 'none', sm: 'inline-flex' }, // Hide text on mobile\r\n            }}\r\n          >\r\n            Say Hi !\r\n          </Button>\r\n          \r\n          {/* Mobile version - icon only */}\r\n          <IconButton\r\n            onClick={() => setOpen(true)}\r\n            sx={{\r\n              width: 56,\r\n              height: 56,\r\n              background: 'linear-gradient(45deg, #6C63FF 30%, #FF4081 90%)',\r\n              color: 'white',\r\n              boxShadow: '0 3px 15px rgba(108, 99, 255, 0.3)',\r\n              display: { xs: 'flex', sm: 'none' }, // Show only on mobile\r\n              '&:hover': {\r\n                background: 'linear-gradient(45deg, #5B52FF 30%, #FF2D71 90%)',\r\n                transform: 'scale(1.1)',\r\n              },\r\n              transition: 'all 0.3s ease',\r\n            }}\r\n          >\r\n            <WavingHandIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Tooltip>\r\n\r\n      <Dialog \r\n        open={open} \r\n        onClose={() => setOpen(false)}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 2,\r\n            boxShadow: '0 8px 32px rgba(0,0,0,0.1)',\r\n            background: 'rgba(255, 255, 255, 0.95)',\r\n            backdropFilter: 'blur(10px)',\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          background: 'linear-gradient(45deg, #6C63FF, #FF4081)',\r\n          backgroundClip: 'text',\r\n          WebkitBackgroundClip: 'text',\r\n          color: 'transparent',\r\n          fontWeight: 700,\r\n        }}>\r\n          ðŸ‘‹ Say Hello!\r\n        </DialogTitle>\r\n        <DialogContent sx={{ pt: 2 }}>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Your Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Leave a message (optional)\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            variant=\"outlined\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 2, pt: 0 }}>\r\n          <Button \r\n            onClick={() => setOpen(false)} \r\n            color=\"inherit\"\r\n            disabled={isLoading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleSubmit}\r\n            disabled={!name || isLoading}\r\n            sx={{\r\n              background: 'linear-gradient(45deg, #6C63FF 30%, #FF4081 90%)',\r\n              color: 'white',\r\n              minWidth: 100,\r\n              '&:hover': {\r\n                background: 'linear-gradient(45deg, #5B52FF 30%, #FF2D71 90%)',\r\n              },\r\n            }}\r\n          >\r\n            {isLoading ? (\r\n              <CircularProgress \r\n                size={24} \r\n                sx={{ \r\n                  color: 'white',\r\n                  position: 'absolute',\r\n                  top: '50%',\r\n                  left: '50%',\r\n                  marginTop: '-12px',\r\n                  marginLeft: '-12px',\r\n                }}\r\n              />\r\n            ) : 'Send'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n      >\r\n        <Alert \r\n          onClose={() => setSnackbar({ ...snackbar, open: false })} \r\n          severity={snackbar.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VisitorNotification;\r\n"],"names":["EMAILJS_PUBLIC_KEY","emailjs","float","keyframes","VisitorNotification","open","setOpen","useState","name","setName","message","setMessage","snackbar","setSnackbar","severity","isLoading","setIsLoading","_jsxs","_Fragment","children","_jsx","Tooltip","title","placement","TransitionComponent","Zoom","Box","sx","position","bottom","right","zIndex","animation","Button","onClick","startIcon","WavingHandIcon","background","color","boxShadow","px","py","borderRadius","textTransform","fontSize","xs","sm","fontWeight","transform","transition","backdropFilter","border","display","IconButton","width","height","Dialog","onClose","PaperProps","DialogTitle","backgroundClip","WebkitBackgroundClip","DialogContent","pt","TextField","autoFocus","margin","label","fullWidth","variant","value","onChange","e","target","mb","multiline","rows","DialogActions","p","disabled","async","from_name","visit_time","Date","toLocaleString","weekday","year","month","day","hour","minute","reply_to","to_name","status","error","console","minWidth","CircularProgress","size","top","left","marginTop","marginLeft","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}